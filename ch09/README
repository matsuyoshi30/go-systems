ファイルシステムの基礎とGo言語の標準パッケージ

ファイルの管理情報が格納される領域（Linux: inode, Windows: NTFS, macOS: HFS+ or Apple File System）
ディレクトリファイルは、配下のファイル名とそのファイルのinodeのインデックスの一覧
inodeの2番がルートディレクトリであることがわかるので、そこから再帰的にファイル構造とストレージのセクタが紐付けられる
`ls -i`でinode番号が確認できる
実際のストレージは複雑（VFS(仮想ファイルシステム)やコンテナなど）

- ファイル、ディレクトリを扱うGoの標準パッケージ (./basic)

ディスクの読み書きはすごく遅いのでできるだけやりたくない
-> バッファを用いることでファイル操作の高速化を図る
=  アプリの入出力はほぼバッファとのやり取りで、アプリで知らないところでバッファとストレージが非同期に同期されている
   [キャッシュ戦略まで自分でやりたい人向けのGoライブラリ](https://github.com/ncw/directio)

path/filepath: OSのファイルシステムに使う
path: URLに使う

- path/filepath パッケージの使い方 (./filepath)
  `go run main.go <filename> <directory>`で試せる